<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
    <style>
        *{
            margin: 0;
            padding: 0;
            list-style: none;
            text-decoration: none;
            color: #000000;
        }
        .cons{
            width: 1200px;
            margin: 50px auto;
        }


        .carousel  .banner {
            position: relative;
            margin: 0 auto;
            width: 1000px;
            height: 300px;
            overflow: hidden;
        }
        .carousel  .banner .bannerInner {
            width: 100%;
            height: 100%;
            background: url("../img/default.gif") no-repeat center center #e1e1e1;
        }
        .carousel  .banner .bannerInner div {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            z-index: 0;
            opacity: 0;
            filter: alpha(opacity=0);
        }
        .carousel  .banner .bannerInner img {
            display: none;
            width: 100%;
            height: 100%;
        }
        .carousel  .banner .bannerTip {
            position: absolute;
            right: 20px;
            bottom: 20px;
            z-index: 10;
            height: 18px;
            overflow: hidden;
        }
        .carousel  .banner .bannerTip li {
            float: left;
            margin-left: 10px;
            width: 18px;
            height: 18px;
            background: lightblue;
            cursor: pointer;
            border-radius: 50%;
        }
        .carousel  .banner .bannerTip li.bg {
            background: red;
        }
        .carousel  .banner a {
            display: none;
            position: absolute;
            top: 50%;
            z-index: 10;
            margin-top: -22.5px;
            width: 30px;
            height: 45px;
            background-image: url("../img/pre.png");

            opacity: 0.5;
            filter: alpha(opacity=50);
        }
        .carousel .banner a:hover{
            opacity: 1;
            filter: alpha(opacity=100);
        }
        .carousel  .banner a.bannerLeft {
            left: 20px;
            background-position: 0 0;
        }
        .carousel  .banner a.bannerRight {
            right: 20px;
            background-position: -50px 0;
        }
    </style>
</head>
<body>
<div class="cons">
    <div class="carousel">
        <div class="banner" id="banner">
            <div class="bannerInner"></div>
            <ul class="bannerTip"></ul>
            <a href="javascript:;" class="bannerLeft"></a>
            <a href="javascript:;" class="bannerRight"></a>
        </div>
    </div>
</div>
<script src="utils.min.js" type="text/javascript"></script>
<script src="tween.min.js" type="text/javascript"></script>
<script type="text/javascript">
    ~function () {
        function AutoBanner(curEleId, ajaxURL, interval) {
            this.banner = document.getElementById(curEleId);
            this.bannerInner = utils.firstChild(this.banner);
            this.bannerTip = utils.children(this.banner, "ul")[0];
            this.bannerLink = utils.children(this.banner, "a");
            this.bannerLeft = this.bannerLink[0];
            this.bannerRight = this.bannerLink[1];
            this.divList = this.bannerInner.getElementsByTagName("div");
            this.imgList = this.bannerInner.getElementsByTagName("img");
            this.oLis = this.bannerTip.getElementsByTagName("li");
            this.jsonData = null;
            this.interval = interval || 3000;
            this.autoTimer = null;
            this.step = 0;
            this.ajaxURL = ajaxURL;

            return this.init();
        }

        AutoBanner.prototype = {
            constructor: AutoBanner,
            getData: function () {
                var _this = this;
                var xhr = new XMLHttpRequest;
                xhr.open("get", this.ajaxURL + "?_=" + Math.random(), false);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4 && /^2\d{2}$/.test(xhr.status)) {
                        _this.jsonData = utils.formatJSON(xhr.responseText);
                    }
                };
                xhr.send(null);
            },
            bindData: function () {
                var str = "", str2 = "";
                if (this.jsonData) {
                    for (var i = 0, len = this.jsonData.length; i < len; i++) {
                        var curData = this.jsonData[i];
                        str += "<div><img src='' trueImg='" + curData["img"] + "'/></div>";
                        i === 0 ? str2 += "<li class='bg'></li>" : str2 += "<li></li>";
                    }
                }
                this.bannerInner.innerHTML = str;
                this.bannerTip.innerHTML = str2;
            },
            lazyImg: function () {
                var _this = this;
                for (var i = 0, len = this.imgList.length; i < len; i++) {
                    ~function (i) {
                        var curImg = _this.imgList[i];
                        var oImg = new Image;
                        oImg.src = curImg.getAttribute("trueImg");
                        oImg.onload = function () {
                            curImg.src = this.src;
                            curImg.style.display = "block";
                            if (i === 0) {
                                var curDiv = curImg.parentNode;
                                curDiv.style.zIndex = 1;
                                zhiAnimate(curDiv, {opacity: 1}, 200);
                            }
                            oImg = null;
                        }
                    }(i);
                }
            },
            autoMove: function () {
                if (this.step === (this.jsonData.length - 1)) {
                    this.step = -1;
                }
                this.step++;
                this.setBanner();
            },
            setBanner: function () {
                for (var i = 0, len = this.divList.length; i < len; i++) {
                    var curDiv = this.divList[i];
                    if (i === this.step) {
                        utils.css(curDiv, "zIndex", 1);
                        zhiAnimate(curDiv, {opacity: 1}, 200, function () {
                            var curDivSib = utils.siblings(this);
                            for (var k = 0, len = curDivSib.length; k < len; k++) {
                                utils.css(curDivSib[k], "opacity", 0);
                            }
                        });
                        continue;
                    }
                    utils.css(curDiv, "zIndex", 0);
                }
                for (i = 0, len = this.oLis.length; i < len; i++) {
                    var curLi = this.oLis[i];
                    i === this.step ? utils.addClass(curLi, "bg") : utils.removeClass(curLi, "bg");
                }
            },
            mouseEvent: function () {
                var _this = this;
                this.banner.onmouseover = function () {
                    window.clearInterval(_this.autoTimer);
                    _this.bannerLeft.style.display = _this.bannerRight.style.display = "block";
                };
                this.banner.onmouseout = function () {
                    _this.autoTimer = window.setInterval(function () {
                        _this.autoMove();
                    }, _this.interval);
                    _this.bannerLeft.style.display = _this.bannerRight.style.display = "none";
                };
            },
            tipEvent: function () {
                var _this = this;
                for (var i = 0, len = this.oLis.length; i < len; i++) {
                    var curLi = this.oLis[i];
                    curLi.index = i;
                    curLi.onclick = function () {
                        _this.step = this.index;
                        _this.setBanner();
                    }
                }
            },
            leftRight: function () {
                var _this = this;
                this.bannerRight.onclick = function () {
                    _this.autoMove();
                };
                this.bannerLeft.onclick = function () {
                    if (_this.step === 0) {
                        _this.step = _this.jsonData.length;
                    }
                    _this.step--;
                    _this.setBanner();
                };
            },
            init: function () {
                var _this = this;
                this.getData();
                this.bindData();

                window.setTimeout(function () {
                    _this.lazyImg();
                }, 500);

                this.autoTimer = window.setInterval(function () {
                    _this.autoMove();
                }, this.interval);

                this.mouseEvent();
                this.tipEvent();
                this.leftRight();

                return this;
            }
        };
        window.AutoBanner = AutoBanner;
        var banner1 = new AutoBanner("banner", "json/banner.txt", 3000);
    }();
</script>
</body>
</html>